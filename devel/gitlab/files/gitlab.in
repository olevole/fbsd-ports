#! /bin/sh

# GITLAB
# Maintainer: @gitlab-freebsd
# App Version: 5.1

# PROVIDE: gitlab 
# REQUIRE: redis mysql
# BEFORE:  nginx
# KEYWORD: shutdown

#
# Add the following lines to /etc/rc.conf to enable gitlab:
#
#gitlab_enable="YES"

. /etc/rc.subr

name="gitlab"
rcvar=gitlab_enable
extra_commands="reload status"

load_rc_config $name

: ${gitlab_enable:=NO}


PATH=$PATH:/usr/local/bin; export PATH

APP_ROOT="%%WWWDIR%%"
#DAEMON_OPTS="-C $APP_ROOT/config/puma.rb -e production"
DAEMON_OPTS="-c $APP_ROOT/config/unicorn.rb -E production -D"
PID_PATH="$APP_ROOT/tmp/pids"
#WEB_SERVER_PID="$PID_PATH/puma.pid"
WEB_SERVER_PID="$PID_PATH/unicorn.pid"
SIDEKIQ_PID="$PID_PATH/sidekiq.pid"
STOP_SIDEKIQ="bundle exec rake sidekiq:stop RAILS_ENV=production"
START_SIDEKIQ="bundle exec rake sidekiq:start RAILS_ENV=production"
DESC="Gitlab service"

check_pid(){
  if [ -f $WEB_SERVER_PID ]; then
    PID=`cat $WEB_SERVER_PID`
    SPID=`cat $SIDEKIQ_PID`
    STATUS=`ps aux | grep $PID | grep -v grep | wc -l`
  else
    STATUS=0
    PID=0
  fi
}

start() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    # Program is running, exit with error code 1.
    echo "Error! $DESC $name is currently running!"
    exit 1
  else
    if [ `whoami` = root ]; then
#      su -m git -c "setenv GIT_DISCOVERY_ACROSS_FILESYSTEM yes && bundle exec puma $DAEMON_OPTS"
      su -m git -c "setenv GIT_DISCOVERY_ACROSS_FILESYSTEM yes && setenv EXECJS_RUNTIME RubyRacer && bundle exec unicorn_rails $DAEMON_OPTS"
      su -m git -c "mkdir -p $PID_PATH && setenv GIT_DISCOVERY_ACROSS_FILESYSTEM yes && $START_SIDEKIQ  > /dev/null  2>&1 &"
      echo "$DESC started"
    fi
  fi
}

stop() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    ## Program is running, stop it.
    kill -QUIT `cat $WEB_SERVER_PID`
    su -m git -c "mkdir -p $PID_PATH && $STOP_SIDEKIQ  > /dev/null  2>&1 &"
    rm "$WEB_SERVER_PID" >> /dev/null
    echo "$DESC stopped"
  else
    ## Program is not running, exit with error.
    echo "Error! $DESC not started!"
    exit 1
  fi
}

restart() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "Restarting $DESC..."
    kill -USR2 `cat $WEB_SERVER_PID`
    sudo -u git -H bash -l -c "mkdir -p $PID_PATH && $STOP_SIDEKIQ  > /dev/null  2>&1 &"
    if [ `whoami` = root ]; then
      sudo -u git -H bash -l -c "mkdir -p $PID_PATH && $START_SIDEKIQ  > /dev/null  2>&1 &"
    fi
    echo "$DESC restarted."
  else
    echo "Error, $name not running!"
    exit 1
  fi
}

status() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "$DESC / Puma with PID $PID is running."
    echo "$DESC / Sidekiq with PID $SPID is running."
  else
    echo "$DESC is not running."
    exit 1
  fi
}

start_cmd=start
stop_cmd=stop
restart_cmd=restart
reload_cmd='echo -n "Reloading $name configuration: " && kill -HUP `cat $PID` && echo "done."'
status_cmd=status

PATH="${PATH}:/usr/local/bin"
run_rc_command "$1"
